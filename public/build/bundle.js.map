{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/javascript/Grid.js","../../src/javascript/Defaults.js","../../src/javascript/Directions.js","../../src/views/Header.svelte","../../src/components/ButtonSmall.svelte","../../src/components/ColorPicker.svelte","../../src/components/Slider.svelte","../../src/components/InputNumber/IncrementButton.svelte","../../src/components/InputNumber/InputNumber.svelte","../../src/components/DarkModeToggle.svelte","../../src/icons/darkmode.js","../../src/views/Settings.svelte","../../src/icons/playControls.js","../../src/components/PlayControls.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export default class Grid extends Array{\r\n    constructor(size){\r\n        super();\r\n        for(let columnIndex = 0; columnIndex < size; columnIndex++){\r\n            const row = new Array(size);\r\n            for(let rowIndex = 0; rowIndex < size; rowIndex++){\r\n                row[rowIndex] = new Cell(columnIndex, rowIndex);\r\n            }\r\n            this.push(row);\r\n        }\r\n    }\r\n\r\n    isCellValid(x, y){\r\n        if(x > this.length - 1 || x < 0)\r\n            return false;\r\n        if(y > this[x].length - 1 || y < 0)\r\n            return false;\r\n        if(this[x][y].visited === true)\r\n            return false;\r\n        return true;\r\n    }\r\n}\r\n\r\nclass Cell{\r\n    active = false;\r\n    visited = false;\r\n    finished = false;\r\n    walls = {\r\n        up: true,\r\n        down: true,\r\n        left: true,\r\n        right: true,\r\n    };\r\n    coordinates;\r\n    \r\n    constructor(x, y){\r\n        this.coordinates = {\r\n            x: x,\r\n            y: y,\r\n        }\r\n    }\r\n}","export const DEFAULTS = {\r\n    // colors property-namn används för labels till <ColorPicker>, därför på svenska\r\n    colors: {\r\n        start: \"#94b5c9\",\r\n        väg: \"#ffffff\",\r\n        färdig: \"#89e66f\",\r\n        aktiv: \"#dd0069\",\r\n        väggar: \"#000000\",\r\n    },\r\n    speed: 150,\r\n    size: 10,\r\n}","class Directions extends Array {\r\n    constructor(){\r\n        super();\r\n        this.push(new Direction(\"up\", 0, -1) )\r\n        this.push(new Direction(\"down\", 0, 1) )\r\n        this.push(new Direction(\"left\", -1, 0) )\r\n        this.push(new Direction(\"right\", 1, 0) )\r\n    }\r\n    opposite(direction) {\r\n        const {x, y} = direction.coordinates;\r\n        const newX = ( x * (-1) );\r\n        const newY = ( y * (-1) );\r\n        const opposite = this.find(direction => \r\n            direction.coordinates.x === newX \r\n            && direction.coordinates.y === newY)\r\n        return opposite;\r\n    }\r\n    getRandomized(){\r\n        // Ändrar inte orginal-arrayen\r\n        return this.#shuffleArray([...this]);\r\n\r\n    }\r\n    // https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    // answered Sep 28, 2012 at 20:20 Laurens Holst\r\n    #shuffleArray(array){\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        return array;\r\n    }\r\n}\r\nclass Direction {\r\n    constructor(name, x, y){\r\n        this.name = name;\r\n        this.coordinates = { x: x, y: y};\r\n    }\r\n}\r\nexport const DIRECTIONS = new Directions();","<header>\r\n    <h1> Randomized depth-first search / recursive backtracker</h1>\r\n    <details>\r\n        <summary>Beskrivning från Wikipedia</summary>\r\n    \r\n        <div class=\"content\">\r\n            The depth-first search algorithm of maze generation is frequently implemented using backtracking. This can be described with a following recursive routine:\r\n            <ol>\r\n                <li>Given a current cell as a parameter,</li>\r\n                <li>Mark the current cell as visited</li>\r\n                <li>\r\n                    While the current cell has any unvisited neighbour cells\r\n                    <ol>\r\n                        <li>Choose one of the unvisited neighbours</li>\r\n                        <li>Remove the wall between the current cell and the chosen cell</li>\r\n                        <li>Invoke the routine recursively for a chosen cell</li>\r\n                    </ol>\r\n                </li>\r\n            </ol> \r\n            which is invoked once for any initial cell in the area. \r\n            <br />\r\n            <a href=\"https://en.wikipedia.org/wiki/Maze_generation_algorithm#Randomized_depth-first_search\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                Wikipedia\r\n            </a>\r\n        </div>    \r\n\r\n    </details>\r\n</header>\r\n\r\n<style>\r\n    header{\r\n        grid-row: 1;\r\n        grid-column: 1;\r\n        justify-self: center;\r\n        height: fit-content;\r\n    }\r\n    h1{\r\n        margin: 0;\r\n        /* Gör att texten alltid fyller bredden, ser mer centrerat ut */\r\n        text-align: justify;\r\n        text-justify: distribute;\r\n    }\r\n    details{\r\n        z-index: 1;\r\n        position: relative;\r\n        line-height: 1.6;\r\n    }\r\n    summary{\r\n        z-index: 1;\r\n        position: relative;\r\n        font-weight: 600;\r\n        padding: 10px 0;      \r\n        user-select: none;\r\n    }\r\n        summary:hover{\r\n            background-color: hsla(0, 0%, 60%, 10%);\r\n        }\r\n    .content{\r\n        position: absolute;\r\n        background-color: var(--bg-secondary);\r\n        padding: 20px;\r\n        box-shadow: 0 0 2px 0px black;\r\n        border-radius: 4px;\r\n    }\r\n</style>","<script>\r\n    export let content;\r\n    export let contentStyle = \"\";\r\n    export let disabled = false;\r\n</script>\r\n\r\n<button\r\n        on:click on:mousedown on:mouseup on:mouseleave\r\n        on:keydown on:keyup\r\n        on:blur\r\n        disabled={disabled}\r\n    >\r\n        <span style={contentStyle} >\r\n            {content}\r\n        </span>\r\n</button>\r\n\r\n<style>\r\n    button{\r\n    background-color: transparent;\r\n    height: 1.7em;\r\n    width: 1.7em;\r\n    border-radius: 50%;\r\n    border: 0;\r\n\r\n    margin: 3px;\r\n    padding: 0;\r\n    overflow: hidden;\r\n    transition-property: background-color, box-shadow;\r\n    transition-duration: 0.1s;\r\n\r\n}\r\n    button:focus-visible:enabled{\r\n        outline: 2px solid var(--accent-color);\r\n    }\r\n    button:hover:enabled{\r\n        /* Grå med låg opacity syns på både ljus och mörk bakgrund */\r\n        background-color: hsla(0, 0%, 60%, 0.15);\r\n        transform: scale(1.15);\r\n    }\r\n    button:active:enabled{\r\n        box-shadow: 0 0 2px hsla(0, 0%, 50%, 0.5) inset;\r\n    }\r\n    span{\r\n        display: inline-block;\r\n        height: 100%;\r\n        width: 100%;\r\n        pointer-events: none;\r\n    }\r\n</style>","<script>\r\n    import ResetButton from \"./ResetButton.svelte\";\r\n\r\n    export let color;\r\n    const originalColor = color;\r\n    export let id;\r\n    export let text;\r\n</script>\r\n\r\n<div class=\"color-settings\">\r\n    <input id={id} type=\"color\" class=\"color-picker\" bind:value={color} />\r\n    <label for={id} >{text}</label>\r\n    <ResetButton on:click={() => color = originalColor} />\r\n</div>\r\n\r\n<style>\r\n    /* Ingen margin mellan <input> och <label> för att de delar mousehover, */\r\n    /* blir ett konstigt glapp när man drar musen mellan dom */\r\n    .color-settings{\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        margin-bottom: 5px;\r\n    }\r\n    .color-picker{\r\n        height: 40px;\r\n        width: 40px;\r\n        margin:0;\r\n        padding: 4px;\r\n    }\r\n    label{\r\n        text-transform: capitalize;\r\n        padding-inline: 15px;\r\n    }\r\n    \r\n</style>","<script>\r\n    export let value;\r\n    export let min;\r\n    export let max;\r\n    export let step = 1;;\r\n</script>\r\n\r\n<div class=\"slider\">\r\n    <span>{min}</span>\r\n    <input \r\n        type=\"range\"\r\n        bind:value={value} \r\n        min={min} max={max} step={step}\r\n        on:input on:change\r\n    />\r\n    <span>{max}</span>\r\n</div>\r\n\r\n<style>\r\n    .slider{        \r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        width: 100%;\r\n    }\r\n    input{\r\n        margin: 0 15px;\r\n        /* padding-inline för att kanterna inte ska täckas av padding om slidern är liten */\r\n        padding-inline: 0;\r\n        flex-grow: 1;\r\n        /* https://stackoverflow.com/questions/36230944/prevent-flex-items-from-overflowing-a-container */\r\n        min-width: 0;\r\n    }\r\n</style>","<script>\r\n    import ButtonSmall from \"../ButtonSmall.svelte\"\r\n\r\n    export let content, contentStyle = \"\";\r\n    export let callback;\r\n    export let disabled = false;\r\n\r\n    $: if(disabled) stopInterval();\r\n\r\n    \r\n    function keyDown(event){\r\n        if(event.key === \"Enter\" && event.repeat === false){\r\n            startInterval();\r\n        }\r\n    }\r\n    \r\n\r\n    // --- Timer ---\r\n\r\n    let timerId;\r\n    let intervals = intervalGenerator();\r\n\r\n    function *intervalGenerator(){ \r\n        // ms\r\n        const intervals = [400, 200, 150, 100, 75, 50];\r\n        const minInterval = 30;\r\n        for(const interval of intervals)\r\n            yield interval;\r\n        while(true)\r\n            yield minInterval;\r\n    }\r\n\r\n    function startInterval(){\r\n        callback?.call();\r\n        timerId = setTimeout(() => {\r\n            startInterval();\r\n        }, intervals.next().value );\r\n    }\r\n    function stopInterval(){\r\n        clearTimeout(timerId);\r\n        intervals = intervalGenerator();\r\n    }\r\n\r\n</script>\r\n\r\n<ButtonSmall\r\n    content={content} contentStyle={contentStyle}\r\n    disabled={disabled} \r\n    on:mousedown={startInterval} on:keydown={event => keyDown(event)}\r\n    on:mouseup={stopInterval} on:mouseleave={stopInterval} on:keyup={stopInterval} \r\n    on:blur={stopInterval} \r\n/>\r\n\r\n","<script>\r\n    import IncrementButton from \"./IncrementButton.svelte\";\r\n    \r\n    export let value = 1;\r\n    export let min = Number.MIN_SAFE_INTEGER;\r\n    export let max = Number.MAX_SAFE_INTEGER;\r\n    export let step = 1;\r\n    export let width = \"100%\";\r\n    \r\n    const iconStyle = \"transform: scaleX(1.5)\"\r\n    let inputRef;   \r\n\r\n    function updateValue(input){\r\n        input = Number(input);\r\n        if(Number.isNaN(input)){\r\n            // Sätter <input> value till senast korrekta värdet\r\n            inputRef.value = value;\r\n        }\r\n        else{\r\n            input = roundToStep(input);\r\n            input = enforceMinMax(input);\r\n            value = input;\r\n            inputRef.value = value;\r\n        }\r\n    }\r\n    function enforceMinMax(number){\r\n        if(number > max)\r\n            return max;\r\n        if(number < min)\r\n            return min;\r\n        return number;\r\n    }\r\n    // Rundar ner\r\n    function roundToStep(number){\r\n        let extra = number % step;\r\n        return number - extra;\r\n    }\r\n\r\n</script>\r\n\r\n\r\n<!-- \r\n    Ingen binding till <input> value,\r\n    går genom on:change och uppdaterar både <input> och prop value manuellt.\r\n-->\r\n<!-- \r\n    onChange är bättre än onInput för att det ska vara möjligt att ta\r\n    bort innehållet och skriva in ett eget värde utan att value sätts till min.\r\n-->\r\n<!-- \r\n    <input> type=\"text\" istället för \"number\" för att ta bort pil-knapparna som är svåra att styla.\r\n    inputmode=\"numeric\" tar upp tangentbord för touch som om det vore type=\"number\".\r\n -->\r\n<div class=\"input-number\">\r\n    <IncrementButton\r\n        content=\"⋏\" contentStyle={iconStyle}\r\n        disabled={value >= max}\r\n        callback={() => updateValue(value + step)}\r\n    />\r\n\r\n    <input \r\n        bind:this={inputRef}\r\n        style:width={width}\r\n        type=\"text\" inputmode=\"numeric\"\r\n        value={value} min={min} max={max} step={step}\r\n        on:change={e => updateValue(e.target.value)}\r\n    />     \r\n    \r\n    <IncrementButton\r\n        content=\"⋎\" contentStyle={iconStyle + \" translateY(1px)\"}\r\n        disabled={value <= min}\r\n        callback={() => updateValue(value + -step)}\r\n    />\r\n</div>\r\n\r\n<style>\r\n    .input-number{\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n    input{\r\n        margin: 0;\r\n        padding: 2px 6px;\r\n        text-align: center;\r\n        box-sizing: content-box;\r\n        background: var(--bg-primary);\r\n        color: var(--text-color);\r\n    }\r\n        :global([data-dark-mode = true]) input{\r\n            border-color: #484848;\r\n        }\r\n</style>","<script>\r\n    import {Sun, Moon} from \"../icons/darkmode\"\r\n\r\n    const browserPreference = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\r\n    let darkMode = browserPreference;\r\n    $: document.documentElement.setAttribute(\"data-dark-mode\", darkMode);\r\n</script>\r\n\r\n<button id=\"dark-mode-toggle\" class:dark={darkMode} on:click={() => darkMode = !darkMode}>\r\n    <span class=\"icon\" >{@html Sun}</span>\r\n    <span class=\"icon\" >{@html Moon}</span>   \r\n    <span class=\"selected-indicator\" class:right={darkMode} />\r\n    <!-- \r\n        Eget element för shadow så att det kan ha högre z-index än ikonerna\r\n        samtidigt som selected-indicator har ett lägre z-index än ikonerna.\r\n\r\n        Det ser bättre ut att shadow syns över ikonerna i transition. \r\n    -->\r\n    <span class=\"selected-indicator-shadow\" class:right={darkMode} />\r\n</button>\r\n\r\n<style>\r\n    #dark-mode-toggle{\r\n        position: absolute;\r\n        top: 50%; right: -20px;\r\n        transform: translateY(-50%);\r\n        /* font-size bestämmer storleken på allt */\r\n        font-size: 2rem;\r\n        height: 1em;\r\n        width: 2.2em;        \r\n        box-shadow: 0 0 2px 1px gray;  \r\n        border-radius: 999px;\r\n\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n\r\n        padding: 0;\r\n        margin: 0;\r\n        border: 0;\r\n\r\n        /* Flyttar bakgrunden för att kunna ha transition med gradient */\r\n        background: linear-gradient(90deg, rgb(197, 250, 255) 20%, rgb(158, 135, 187) 80%);\r\n        background-size: 150%;\r\n        background-position: left;\r\n\r\n        /* quartic-out */\r\n        transition: background-position 1s cubic-bezier(.17,.84,.44,1);\r\n\r\n    }    \r\n        #dark-mode-toggle.dark, #dark-mode-toggle:hover{\r\n            background-position: right;\r\n        }\r\n        #dark-mode-toggle, #dark-mode-toggle.dark:hover{\r\n            background-position: left;\r\n        }\r\n        #dark-mode-toggle:focus-visible{\r\n            outline-color: var(--accent-color);\r\n            outline-offset: 8px;\r\n        }\r\n    .icon{\r\n        z-index: 2;\r\n        display: flex;\r\n        padding: 0.2em;\r\n        box-sizing: border-box;\r\n    }\r\n    \r\n    .selected-indicator,\r\n    .selected-indicator-shadow,\r\n    .icon\r\n    {\r\n        height: 1em;\r\n        width: 1em;\r\n        border-radius: 50%;\r\n    }\r\n\r\n    .selected-indicator,\r\n    .selected-indicator-shadow\r\n    {\r\n        position: absolute;\r\n        top: 0; left: 0;\r\n        transition: 0.2s ease;\r\n    }\r\n    \r\n    .selected-indicator{ background-color: white; }\r\n\r\n    .selected-indicator-shadow{ \r\n        z-index: 3;\r\n        box-shadow: 0 0 4px 1px black;\r\n    }\r\n        .selected-indicator.right,\r\n        .selected-indicator-shadow.right\r\n        {\r\n            left: 100%;\r\n            transform: translateX(-100%);\r\n        }\r\n        #dark-mode-toggle:active .selected-indicator-shadow{\r\n            box-shadow: 0 0 6px 1px black;\r\n        }\r\n</style>","// Ikoner från https://www.svgrepo.com/ men modifierade.\r\n// Har tagit bort några path som fungerade likt stroke och lagt till vanlig stroke.\r\n// Egna färger i fill.\r\n\r\nexport const Sun = `\r\n    <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n        viewBox=\"0 0 483.512 483.512\" xml:space=\"preserve\">\r\n        <polygon \r\n            fill=#fdda20 stroke=\"black\" stroke-width=\"30\"\r\n            points=\"475.512,241.691 421.2,289.571 444.016,358.283 372.952,372.267 358.336,443.203 \r\n            289.76,419.915 241.752,474.131 193.752,419.915 125.168,443.203 110.552,372.259 39.488,358.275 62.312,289.563 8,241.691 \r\n            62.312,193.819 39.488,125.107 110.56,111.123 125.176,40.187 193.752,63.467 241.752,9.259 289.76,63.475 358.336,40.187 \r\n            372.952,111.131 444.024,125.115 421.2,193.827 \"\r\n        />\r\n        <circle \r\n            fill=rgb(255,239,0) stroke=\"black\" stroke-width=\"20\"\r\n            cx=\"241.752\" cy=\"244.339\" r=\"133.64\"\r\n        />\r\n    </svg>\r\n`\r\n// viewBox är ändrad för att göra ikonen lite större, orginal är \"0 0 24 24\"\r\nexport const Moon = `\r\n    <svg viewBox=\"0 1 22 22\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path \r\n            stroke=black stroke-width=1.5 fill=#ffef00\r\n            d=\"M3 17C10.952 18.6176 16.6829 8.75775 11 3C16.0007 3.13144 20 7.11149 20 12C20 16.9715 16.1188 21 11 21C7.77111 21 4.65938 19.4319 3 17Z\"\r\n        />\r\n    </svg>\r\n`\r\n","<script>\r\n    import {DEFAULTS} from \"../javascript/Defaults\"\r\n    import ColorPicker from \"../components/ColorPicker.svelte\";\r\n    import ResetButton from \"../components/ResetButton.svelte\"\r\n    import Slider from \"../components/Slider.svelte\"\r\n    import InputNumber from \"../components/InputNumber/InputNumber.svelte\"\r\n    import DarkModeToggle from \"../components/DarkModeToggle.svelte\";\r\n\r\n    export let size = DEFAULTS.size;\r\n    export let speed = DEFAULTS.speed; // ms\r\n    export let colors = DEFAULTS.colors;\r\n    export let closed = false;\r\n    const sliderSettings = {\r\n        size: {\r\n            value: size,\r\n            min: 5,\r\n            max: 20,\r\n        },\r\n        speed: {\r\n            value: speed,\r\n            min: 10,\r\n            max: 1000,\r\n        },\r\n    }\r\n    \r\n</script>\r\n\r\n<aside>\r\n    <div id=\"settings\">\r\n        <button \r\n            id=\"open-settings\"\r\n            on:click|preventDefault={() => closed = !closed}\r\n            class:closed\r\n        >\r\n            <span>⏵</span>\r\n        </button>\r\n    \r\n        <div class=\"expandable\" class:closed>\r\n            <div class=\"header\">\r\n                <h2>Inställningar</h2>\r\n                <DarkModeToggle />\r\n            </div>\r\n        \r\n            <!-- Size -->\r\n            <div class=\"group\">\r\n                <!-- slider-label-container passar på både containern och label, inte gjort av misstag -->\r\n                <div class=\"slider-header\">\r\n                    <h3>Storlek:</h3>\r\n                    <div class=\"box-input-container\">                    \r\n                        <InputNumber \r\n                            bind:value={size}\r\n                            min={sliderSettings.size.min} max={sliderSettings.size.max} step={1}\r\n                            width=\"3ch\"\r\n                        />\r\n                        <span>x {size}</span>\r\n                    </div>\r\n                    <ResetButton on:click={() => size = sliderSettings.size.value} />\r\n                </div>\r\n                <Slider\r\n                    bind:value={size}\r\n                    min={sliderSettings.size.min} max={sliderSettings.size.max} step=1\r\n                />\r\n            </div>\r\n        \r\n            <!-- Speed -->\r\n            <div class=\"group\">\r\n                <!-- slider-label-container passar på både containern och label, inte gjort av misstag -->\r\n                <div class=\"slider-header\">\r\n                    <h3>Hastighet: </h3>\r\n                    <div class=\"box-input-container\">\r\n                        <InputNumber \r\n                            bind:value={speed}\r\n                            min={sliderSettings.speed.min} max={sliderSettings.speed.max} step={1}\r\n                            width=\"4ch\"\r\n                        />\r\n                        <span>ms</span>\r\n                    </div>\r\n                    <ResetButton on:click={() => speed = sliderSettings.speed.value} />\r\n                </div>\r\n                <Slider\r\n                    bind:value={speed}\r\n                    min={sliderSettings.speed.min} max={sliderSettings.speed.max} step={1}\r\n                />\r\n            </div>    \r\n        \r\n            <!-- Color -->\r\n            <div id=\"color-settings\" class=\"group\" >\r\n                <h3 class=\"color-title\">Färger</h3>\r\n                <!-- Kan inte binda color till objektet från Object.entries -->\r\n                <!-- Måste binda till colors objektet -->\r\n                {#each Object.entries(colors) as [key] }\r\n                    <ColorPicker \r\n                        id={`color-${key}`} \r\n                        text={key}\r\n                        bind:color={colors[key]}\r\n                    />\r\n                {/each}\r\n            </div>    \r\n        </div>\r\n    </div>\r\n</aside>\r\n\r\n<style>\r\n    aside{\r\n        z-index: 2;\r\n        grid-row-start: 1;\r\n        grid-row-end: 3;\r\n        grid-column: 1;\r\n        margin: auto;\r\n        /* Ignorera body padding för att ligga längst ut till höger */\r\n        margin-right: calc( var(--body-padding) * -1 );\r\n        /* \r\n            Ingen margin-top gör att aside inte flyttas ner när tabellen blir större.\r\n            Det blir hyffsat centrerat på 1080p men aside ligger högre upp på större upplösning,\r\n            lägre på mindre upplösning.\r\n        */\r\n        margin-top: 0;\r\n        /* \r\n            body padding-bottom tas inte med i overflow.\r\n            Lägger till padding för att inte ska ta i botten av sidan.\r\n            Det blir lite mer padding-top när fönsterhöjden är liten.\r\n        */\r\n        padding: var(--body-padding) 0px;\r\n\r\n    }  \r\n    #settings{\r\n        --bg-opacity: 0.95;\r\n        display: flex;\r\n        background-color: rgba( var(--bg-secondary-rgb), var(--bg-opacity) );\r\n        border-radius: 8px 0px 0px 8px;\r\n        box-shadow: 0 0 2px 0px black;                \r\n    }\r\n        :global([data-dark-mode = true]) #settings{\r\n            --bg-opacity: 0.98;\r\n        }\r\n    #open-settings{\r\n        z-index: 2;\r\n        background: #484848;\r\n        color: white;\r\n        font-size: 2rem;\r\n        width: 1em;\r\n        border-radius: inherit;\r\n        \r\n        display: flex;\r\n        align-items: center; \r\n        justify-content: center;\r\n        \r\n        margin: 0; \r\n        padding: 0;\r\n        border: 0;\r\n    }      \r\n        :global([data-dark-mode = true]) #open-settings{\r\n            /* background: linear-gradient(0deg, rgb(65, 55, 168) 0%, rgb(118, 109, 221) 100%); */\r\n            background-color: #6f7677;\r\n        }   \r\n        #open-settings:hover{\r\n            filter: contrast(1.3);\r\n        }\r\n        #open-settings:focus-visible{\r\n            /* box-shadow för att outline inte är tydligt nog */\r\n            box-shadow: 0 0 4px 4px var(--accent-color);\r\n            /* För dålig kontrast mellan outline/shadow och knappen annars  */\r\n            filter: saturate(1.2) contrast(1.2);\r\n        }\r\n        #open-settings.closed span{\r\n            transform: rotateY(180deg);\r\n        }\r\n    .expandable{        \r\n        width: 19rem;\r\n        padding-inline: 50px;\r\n        overflow: hidden;\r\n        opacity: 1;\r\n        transition: 0.35s ease-out;\r\n        transition-property: width, opacity, padding-inline;\r\n    }\r\n        .expandable.closed{\r\n            width: 0;\r\n            padding-inline: 0;\r\n            opacity: 0;\r\n        }\r\n    .header{\r\n        position: relative;\r\n        text-align: center;\r\n    }\r\n    .group{\r\n        width: 100%;\r\n        margin: 40px auto;\r\n    }\r\n    #color-settings{\r\n        width: 14rem;\r\n        min-width: min-content;\r\n        max-width: 100%;\r\n    }\r\n    .slider-header{\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        width: 16rem;\r\n        min-width: min-content;\r\n        max-width: 100%;\r\n        margin: auto;\r\n        margin-bottom: 6px;\r\n    }\r\n    .box-input-container{\r\n        display: flex;\r\n        align-items: center;\r\n        margin-inline: 12px;\r\n    }\r\n        .box-input-container span{\r\n            /* \r\n                Sätter width för att containern inte ska flytta sig \r\n                när längden text ändras, t.ex. 9 -> 10 (1 -> 2 tecken)\r\n            */\r\n            width: 2.5em;\r\n            margin-left: 6px;\r\n            text-align: start;\r\n            white-space: nowrap;\r\n            overflow: hidden;\r\n        }\r\n    .color-title{\r\n        margin: 15px;\r\n        margin-top: 0;\r\n        text-align: center;\r\n    }\r\n</style>","// Har lagt till fill=\"currentColor\"\r\n\r\nexport const Play = `<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 384 512\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\"M361 215C375.3 223.8 384 239.3 384 256C384 272.7 375.3 288.2 361 296.1L73.03 472.1C58.21 482 39.66 482.4 24.52 473.9C9.377 465.4 0 449.4 0 432V80C0 62.64 9.377 46.63 24.52 38.13C39.66 29.64 58.21 29.99 73.03 39.04L361 215z\"/></svg>`\r\nexport const Pause = `<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 320 512\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\"M272 63.1l-32 0c-26.51 0-48 21.49-48 47.1v288c0 26.51 21.49 48 48 48L272 448c26.51 0 48-21.49 48-48v-288C320 85.49 298.5 63.1 272 63.1zM80 63.1l-32 0c-26.51 0-48 21.49-48 48v288C0 426.5 21.49 448 48 448l32 0c26.51 0 48-21.49 48-48v-288C128 85.49 106.5 63.1 80 63.1z\"/></svg>`\r\nexport const Step = `<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 320 512\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\"M287.1 447.1c17.67 0 31.1-14.33 31.1-32V96.03c0-17.67-14.33-32-32-32c-17.67 0-31.1 14.33-31.1 31.1v319.9C255.1 433.6 270.3 447.1 287.1 447.1zM52.51 440.6l192-159.1c7.625-6.436 11.43-15.53 11.43-24.62c0-9.094-3.809-18.18-11.43-24.62l-192-159.1C31.88 54.28 0 68.66 0 96.03v319.9C0 443.3 31.88 457.7 52.51 440.6z\"/></svg>`\r\nexport const Instant = `<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 384 512\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\"M240.5 224H352C365.3 224 377.3 232.3 381.1 244.7C386.6 257.2 383.1 271.3 373.1 280.1L117.1 504.1C105.8 513.9 89.27 514.7 77.19 505.9C65.1 497.1 60.7 481.1 66.59 467.4L143.5 288H31.1C18.67 288 6.733 279.7 2.044 267.3C-2.645 254.8 .8944 240.7 10.93 231.9L266.9 7.918C278.2-1.92 294.7-2.669 306.8 6.114C318.9 14.9 323.3 30.87 317.4 44.61L240.5 224z\"/></svg>`\r\nexport const Reset = `<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\"M480 256c0 123.4-100.5 223.9-223.9 223.9c-48.84 0-95.17-15.58-134.2-44.86c-14.12-10.59-16.97-30.66-6.375-44.81c10.59-14.12 30.62-16.94 44.81-6.375c27.84 20.91 61 31.94 95.88 31.94C344.3 415.8 416 344.1 416 256s-71.69-159.8-159.8-159.8c-37.46 0-73.09 13.49-101.3 36.64l45.12 45.14c17.01 17.02 4.955 46.1-19.1 46.1H35.17C24.58 224.1 16 215.5 16 204.9V59.04c0-24.04 29.07-36.08 46.07-19.07l47.6 47.63C149.9 52.71 201.5 32.11 256.1 32.11C379.5 32.11 480 132.6 480 256z\"/></svg>`","<script>\r\n    import {Play, Pause, Step, Instant, Reset} from \"../icons/playControls\"\r\n\r\n    export let generator;\r\n    export let speed = 300; //ms\r\n    export let onReset;\r\n    export let isPaused = false;\r\n    let isFinished = true;\r\n    // Måste använda clearTimeout(timerId) för att den gamla loopen inte ska fortsätta när man byter generator\r\n    let timerId;\r\n\r\n    $: { init(generator) }\r\n    function init(generator){\r\n        clearTimeout(timerId);\r\n        if(generator != null)\r\n            isPaused ? clickStep() : loopingTimer();\r\n        else isFinished = true;\r\n    }\r\n\r\n    function loopingTimer(){\r\n        timerId = setTimeout(() => loopingTimer(), speed);\r\n        next(); \r\n    }\r\n    function next(){\r\n        isFinished = generator?.next().done;\r\n        if(isFinished) \r\n            clearTimeout(timerId);\r\n    }\r\n\r\n\r\n    // --- Click events ---\r\n\r\n    function clickStart(){\r\n        isPaused = false;\r\n        if(generator){\r\n            loopingTimer();\r\n        }\r\n    }\r\n    function clickStop(){\r\n        clearTimeout(timerId);\r\n        isPaused = true;\r\n    }\r\n    function clickStep(){\r\n        clearTimeout(timerId);\r\n        isPaused = true;\r\n        next();\r\n    }\r\n    function clickInstant(){\r\n        while(isFinished === false && generator != null){\r\n            next();\r\n        }\r\n    }\r\n    function clickReset(){\r\n        clearTimeout(timerId);\r\n        isFinished = true;\r\n        onReset?.call();\r\n    }\r\n</script>\r\n\r\n<div id=\"play-controls\">\r\n    <!-- En knapp istället för två för att inte tappa fokus när man navigerar med tangentbord -->\r\n    <button title={isPaused ? \"Starta\" : \"Pausa\"} on:click={isPaused ? clickStart : clickStop} >\r\n        {#if isPaused}\r\n        {@html Play}\r\n        {:else}\r\n        {@html Pause}\r\n        {/if}\r\n    </button>\r\n    <button title=\"Ett steg\" disabled={isFinished}  on:click={clickStep} >{@html Step}</button>\r\n    <button title=\"Lös direkt\" disabled={isFinished} on:click={clickInstant} >{@html Instant}</button>\r\n    <button title=\"Ny\" disabled={isFinished && generator == null} on:click={clickReset}>{@html Reset}</button>\r\n    \r\n</div>\r\n\r\n<style>\r\n    #play-controls{\r\n        display: flex;\r\n        flex-flow: row wrap;\r\n        margin-top: 12px;\r\n        margin-bottom: 20px;\r\n    }\r\n    button{\r\n        border-radius: 50%;\r\n        width: 2.2rem;\r\n        height: 2.2rem;\r\n        margin: 6px 10px;\r\n        padding: 0.45em;\r\n        box-sizing: border-box;\r\n\r\n        border: 2px solid hsl(0, 0%, 25%);\r\n        /* Opacity/alpha < 1 för att den ska vara lite mörkare mot mörkare bakgrund */\r\n        background-color: hsla(0, 0%, 95%, 90%);\r\n        color: rgb(75, 75, 75);\r\n\r\n        display: inline-flex;\r\n        justify-content: center;\r\n        /* Ikonerna har bättre storlek med align-items: stretch än center */\r\n        align-items: stretch;\r\n\r\n        transition: 0.2s opacity, 0.1s background-color;\r\n    }\r\n        button:hover:not(:disabled){\r\n            border-color: gray;\r\n        }\r\n        button:active:not(:disabled){\r\n            background-color: hsla(0, 0%, 80%, 90%);\r\n        } \r\n        button:focus-visible:enabled{\r\n            outline: 2px solid var(--accent-color);\r\n            outline-offset: 4px;\r\n        }\r\n        button:disabled{\r\n            opacity: 0.25;\r\n        } \r\n\r\n</style>","<script>\r\n    import Grid from \"./javascript/Grid\"\r\n    import { DEFAULTS } from \"./javascript/Defaults\"\r\n    import { DIRECTIONS } from \"./javascript/Directions\"\r\n    import Header from \"./views/Header.svelte\"\r\n    import Settings from \"./views/Settings.svelte\"\r\n    import PlayControls from \"./components/PlayControls.svelte\"\r\n\r\n    let colors = {...DEFAULTS.colors};\r\n    let speed =  DEFAULTS.speed;\r\n    let size = DEFAULTS.size;\r\n    let grid = new Grid(size);\r\n    let moves;\r\n    $: { resetGrid(size); } // Kör när size ändras\r\n\r\n\r\n    function resetGrid(size){\r\n        moves = null;\r\n        grid = new Grid(size);\r\n    }\r\n    function clickCell(x, y){\r\n        // Ska inte gå att starta från flera rutor samtidigt\r\n        if(moves == null)\r\n            moves = move(x, y);\r\n    } \r\n\r\n    function* move(currentX, currentY){\r\n        grid[currentX][currentY].active = true;\r\n        grid[currentX][currentY].visited = true;\r\n\r\n        for(const direction of DIRECTIONS.getRandomized()){\r\n            const newX = currentX + direction.coordinates.x;\r\n            const newY = currentY + direction.coordinates.y;            \r\n            if(grid.isCellValid(newX, newY)){\r\n                yield;\r\n                // Ta bort BÅDA väggarna innan nästa move,\r\n                // för att inte behöva hålla koll på vilken den förra rutan var \r\n                grid[currentX][currentY].walls[direction.name] = false;\r\n                grid[newX][newY].walls[DIRECTIONS.opposite(direction).name] = false;\r\n                grid[currentX][currentY].active = false;\r\n                yield* move(newX, newY);\r\n                // Vandra bakåt\r\n                grid[currentX][currentY].active = true;   \r\n            }            \r\n        }\r\n        // Alla directions klara betyder att cellen inte kan besökas igen\r\n        yield;\r\n        grid[currentX][currentY].finished = true ;\r\n    }\r\n\r\n</script>\r\n\r\n\r\n<Header />\r\n<main>\r\n    <h2 style=\"margin: 0;\">Tryck på en ruta för att starta</h2>\r\n    <PlayControls generator={moves} speed={speed} onReset={() => resetGrid(size)} />\r\n\r\n    <!-- Vissa webbläsare har ibland ett glapp mellan table border och cellerna. -->\r\n    <!-- Fixar det med background-color  -->\r\n    <table \r\n        style:border-color = {colors.väggar}\r\n        style:background-color = {colors.väggar}\r\n    >\r\n        {#each grid as row, y}\r\n            <tr>\r\n                <!-- x = index,  x+\",\"+y = key -->\r\n                {#each row as cell , x (x+\",\"+y)} \r\n                    <td \r\n                        on:click={() => clickCell(x, y)}\r\n                        style:background-color = { \r\n                            grid[x][y].finished ? colors.färdig :\r\n                            grid[x][y].active ? colors.aktiv :\r\n                            grid[x][y].visited ? colors.väg : colors.start\r\n                        }\r\n                        style:border-color = {colors.väggar}\r\n                        style:border-top-width = {grid[x][y].walls.up ? \"1px\" : 0 }\r\n                        style:border-bottom-width = {grid[x][y].walls.down ? \"1px\" : 0}\r\n                        style:border-left-width = {grid[x][y].walls.left ? \"1px\" : 0}\r\n                        style:border-right-width = {grid[x][y].walls.right ? \"1px\" : 0}\r\n                    />\r\n                {/each}\r\n            </tr>\r\n        {/each}\r\n    </table>\r\n</main>\r\n<Settings\r\n    bind:size\r\n    bind:speed\r\n    bind:colors\r\n/>\r\n\r\n<style>\r\n    /* body style i public/global.css */\r\n    main{\r\n        grid-row: 2;\r\n        grid-column: 1;\r\n        margin-inline: auto;\r\n        margin-top: 60px;\r\n        margin-bottom: 110px;\r\n        width: max-content;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center; \r\n    }\r\n    :global(h1){\r\n        font-size: 1.4rem;\r\n    }  \r\n    :global(h2){\r\n        font-size: 1.3rem;\r\n    }   \r\n    :global(h3){\r\n        font-size: 1.1rem;\r\n    }\r\n    \r\n    table{\r\n        /* border-spacing är bättre än border-collapse för att inte få glapp i hörnen av cellerna. */\r\n        /* Med border-spacing:0 blir border dubbelt så tjock mellan alla td, men inte mellan td och table. */\r\n        /* Därför border på table som tar samma färg som td border */\r\n        border-spacing: 0;\r\n        /* Outline är utanför border, byter inte färg */\r\n        outline: 3px solid var(--text-color);\r\n        /* Samma width som td, färg sätts inline */\r\n        border-width: 1px;\r\n        border-style: solid;\r\n    }\r\n    td{\r\n        width: 30px;\r\n        height: 30px;\r\n        /* Table har ingen border-style som default */\r\n        /* Andra border settings sätts inline */\r\n        border-style: solid;\r\n        box-sizing: border-box;\r\n    }\r\n</style>","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.body,\r\n});\r\n\r\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","toggle_class","toggle","classList","HtmlTag","constructor","this","e","n","c","html","h","m","nodeName","t","innerHTML","Array","from","childNodes","p","current_component","set_current_component","component","bubble","callbacks","$$","type","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","add_flush_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","callback","has","add","clear","fragment","before_update","dirty","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","destroy_block","lookup","bind","index","props","undefined","bound","create_component","mount_component","customElement","on_mount","on_destroy","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","children","l","intro","SvelteComponent","$destroy","$on","indexOf","splice","$set","$$props","obj","$$set","keys","Grid","size","super","columnIndex","row","rowIndex","Cell","isCellValid","x","y","visited","active","finished","walls","up","down","left","right","coordinates","DEFAULTS","colors","start","aktiv","speed","Direction","DIRECTIONS","opposite","direction","newX","newY","find","getRandomized","shuffleArray","array","j","Math","floor","random","header","button","span","content","contentStyle","disabled","div","label","color","originalColor","id","$$invalidate","span0","span1","min","max","step","to_number","intervalGenerator","intervals","interval","timerId","keyDown","repeat","startInterval","setTimeout","next","stopInterval","clearTimeout","iconStyle","incrementbutton0_changes","incrementbutton1_changes","inputRef","Number","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","width","updateValue","number","isNaN","enforceMinMax","$$value","span2","span3","darkMode","window","matchMedia","matches","documentElement","colorpicker_props","colorpicker_changes","entries","aside","div9","div8","div0","h2","div3","div2","h30","div1","div6","div5","h31","div4","div7","h32","preventDefault","r","each_blocks","closed","sliderSettings","$$self","create_if_block","button0","button1","button2","button3","apply","arguments","generator","onReset","isPaused","isFinished","loopingTimer","done","clickStep","td","tr","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","get","set","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","table","main","moves","grid","resetGrid","clickCell","move","currentX","currentY","body"],"mappings":"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"}